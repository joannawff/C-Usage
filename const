1. const修饰的类型或变量值不可更改，如果编译中某个值确定保持不变，则该变量可以const
2. const在*左边，被指物是常量，在*右边，指针是常量，出现在两边，则都是常量;
2. 关键字在const前后的含义都是一样的，如：
void f1(const Widget* p)
void f1(Widget const * p)
3. const只是给出分配的内存地址，在程序运行过程中只有一份拷贝，提高了效率
4. 带const的参数传递
C++参数传递大多用&引用传递，因为值传递会先建立一个对象副本，为形参重新分配内存，然后将实参的值拷贝进去。而&直接传递地址，提高效率。
const会防止误修改函数参数的值
5. 参数传递
（1）传递引用：C++参数传递大多用&引用传递，因为值传递会先建立一个对象副本，为形参重新分配内存，然后将实参的值拷贝进去。而&直接传递地址，提高效率。
（2）传递参数：在函数内部不该更改
6. const修饰的成员函数
（1）不能修改任何成员变量
（2）不能调用非const成员函数
如：int * mallocA() const {}
7. const修饰函数返回值
如：const int * mallocA(){}
8. 函数返回值为值传递时，会把返回值复制到外部临时存储单元，加const无意义。
如：int GetInt(void) 就不要写成void GetInt(void)

【参考】
http://www.cnblogs.com/xudong-bupt/p/3509567.html
